document.addEventListener('DOMContentLoaded', ()=>{

    let deleteButtons = document.querySelectorAll('.rc-map-delete');

    let bulkActionSelect = document.getElementById('bulk-action-selector-top');
    let applyButton = document.getElementById('doaction');


    /**
     * Handles delete single post from table view generated by {DATATABLES.js}
     */
    deleteButtons.forEach(button => {
        button.addEventListener('click', ()=>{

            let parent = findParent(button, 'td') // get the "<td>" holding the post id
            let postId = parent.firstChild.dataset.postId // the first child is an "<a>" tag holding the id (this will cause a bug)

            let ajaxurl = globalSiteData.ajax_url;
            let data = {
                'action' : 'rc_delete_post',
                'post_id': postId,
                'nonce': globalSiteData.nonceX
            };

            jQuery.ajax({
                url: ajaxurl,
                method: 'POST', // or 'GET' depending on your server configuration
                data: data,
                success: function(response) {
                    location.reload();
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.error('Error:', textStatus, errorThrown);
                }
            });
        })
    })
    /**
     * Handles delete bulk posts from table view generated by {DATATABLES.js}
     */

    applyButton.addEventListener('click',()=>{
        if (!(bulkActionSelect.value === 'delete')) {
            alert('Please select an option')
            return;
        }

        // Get the currently selected checkboxes and store them in the an array
        let postIDs = []
        let allCheckBoxes = Array.from(document.querySelectorAll('.rc-map-selected'));
        let checkedBoxes  = allCheckBoxes.filter(checkbox=> checkbox.checked)
        checkedBoxes.forEach(checkedBox=>{
            let parent = findParent(checkedBox,'tr');
            let postId = parent.querySelector('[data-post-id]').dataset.postId  // data-post-id inside HTML
            postIDs.push(postId)
        })



        let confirmAction =  confirm('Are you sure you want to delete the selected entries?');
        if (!confirmAction) return;

        // After confirming, make request
        let ajaxurl = globalSiteData.ajax_url;
        let data = {
            'action' : 'rc_bulk_delete_post',
            'post_ids': postIDs,
            'nonce': globalSiteData.nonceX
        };

        jQuery.ajax({
            url: ajaxurl,
            method: 'POST', // or 'GET' depending on your server configuration
            data: data,
            success: function(response) {
                location.reload();
            },
            error: function(jqXHR, textStatus, errorThrown) {
                console.error('Error:', textStatus, errorThrown);
            }
        });


    })




})

function findParent(element , type) {
    if (!element) {
        return null; // If the element is not found or doesn't have a parent
    }

    // Check if the current element is a 'type' (td / tr / p ) anything really
    if (element.tagName.toLowerCase() === type) {
        return element; // Return the 'td' element if found
    }

    // Otherwise, continue climbing up the DOM tree
    return findParent(element.parentNode, type);
}